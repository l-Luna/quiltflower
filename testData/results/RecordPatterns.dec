import java.io.PrintStream;
import java.lang.runtime.SwitchBootstraps;
import java.util.Arrays;

public class RecordPatterns {
   public static void main(String[] var0) {
      RecordPatterns.Shape var1 = fromText(var0);// 19
      PrintStream var10000 = System.out;
      RecordPatterns.Shape var2 = var1;
      int var3 = 0;

      while(true) {
         Object var10001;
         switch(SwitchBootstraps.typeSwitch<"typeSwitch",RecordPatterns.Triangle,RecordPatterns.Triangle,RecordPatterns.Rectangle,RecordPatterns.Circle,RecordPatterns.Circle>(
            var2, var3
         )) {
            case -1:
               var10001 = "null2";
               break;
            case 0:
               RecordPatterns.Point var33 = $proxy$a((RecordPatterns.Triangle)var2);
               if (var33 != null) {
                  int var36 = $proxy$x(var33);
                  int var4 = Integer.valueOf(var36);// 21
                  var36 = $proxy$y(var33);
                  int var5 = Integer.valueOf(var36);
                  var33 = $proxy$b((RecordPatterns.Triangle)var2);
                  if (var33 != null) {
                     var36 = $proxy$x(var33);
                     int var7 = Integer.valueOf(var36);
                     var36 = $proxy$y(var33);
                     int var8 = Integer.valueOf(var36);
                     var33 = $proxy$c((RecordPatterns.Triangle)var2);
                     RecordPatterns.Triangle var10 = (RecordPatterns.Triangle)var2;
                     if (var4 + var5 > 0) {
                        var10001 = var10 + "";// 22
                        break;
                     }
                  }
               }

               var3 = 1;
               continue;
            case 1:
               RecordPatterns.Triangle var11 = (RecordPatterns.Triangle)var2;// 23
               var10001 = var11;
               break;
            case 2:
               RecordPatterns.Rectangle var12 = (RecordPatterns.Rectangle)var2;// 24
               var10001 = var12;
               break;
            case 3:
               RecordPatterns.Circle var13 = (RecordPatterns.Circle)var2;// 25
               if (var13 == null) {
                  var3 = 4;
                  continue;
               }

               var10001 = var13;// 26
               break;
            case 4:
               RecordPatterns.Circle var14 = (RecordPatterns.Circle)var2;// 27
               var10001 = "null circle lol";
               break;
            default:
               throw new MatchException(null, null);
         }

         var10000.println(var10001);// 20
         RecordPatterns.Point3 var15 = fromTextP(var0);// 31
         if (var15 instanceof RecordPatterns.Point3) {
            int var6 = $proxy$x(var15);// 28
            var3 = Integer.valueOf(var6);
            var6 = $proxy$y(var15);
            int var19 = Integer.valueOf(var6);
            var6 = $proxy$z(var15);
            int var22 = Integer.valueOf(var6);
            System.out.println(var3 + var19 + var22);// 34
         }

         if (var15 instanceof RecordPatterns.Point3) {
            int var27 = $proxy$x(var15);// 33
            var3 = Integer.valueOf(var27);
            var27 = $proxy$y(var15);
            int var20 = Integer.valueOf(var27);
            var27 = $proxy$z(var15);
            int var23 = Integer.valueOf(var27);
            if (var3 > 0 && var20 == 2) {
               System.out.println(var23);// 38
            }
         }

         RecordPatterns.S var18 = fromTextS(var0);// 41
         if (var18 instanceof RecordPatterns.S) {// 43
            Object var30 = $proxy$a(var18);// 37
            if (var30 instanceof Integer var21) {
               var30 = $proxy$b(var18);
               if (var30 instanceof String var24) {
                  var30 = $proxy$xs(var18);
                  System.out.println("an S of " + var21 + " and " + var24 + " and " + Arrays.toString((Object[])var30));// 44
               }
            }
         }

         return;// 46
      }
   }

   public static RecordPatterns.Shape fromText(String[] var0) {
      return null;// 49
   }

   public static RecordPatterns.Point3 fromTextP(String[] var0) {
      return null;// 53
   }

   public static RecordPatterns.S fromTextS(String[] var0) {
      return null;// 57
   }

   static record Circle(RecordPatterns.Point c, int r) implements RecordPatterns.Shape {
   }

   static enum Colour {
      RED,
      GREEN,
      BLUE;
   }

   static record ColouredShape(RecordPatterns.Shape it, RecordPatterns.Colour c) {
   }

   static record Point(int x, int y) {
   }

   static record Point3(int x, int y, int z) {
   }

   static record Rectangle(RecordPatterns.Point a, RecordPatterns.Point b) implements RecordPatterns.Shape {
   }

   static record S<A, B, Xs>(A a, B b, Xs... xs) {
   }

   sealed interface Shape permits RecordPatterns.Triangle, RecordPatterns.Rectangle, RecordPatterns.Circle {
   }

   static record Triangle(RecordPatterns.Point a, RecordPatterns.Point b, RecordPatterns.Point c) implements RecordPatterns.Shape {
   }
}

class 'RecordPatterns' {
   method 'main ([Ljava/lang/String;)V' {
      0      6
      1      6
      2      6
      3      6
      4      6
      5      7
      6      7
      7      7
      8      8
      9      8
      a      9
      b      9
      c      14
      d      14
      e      13
      f      13
      10      13
      11      13
      12      13
      13      13
      3c      65
      3d      65
      41      65
      42      20
      43      20
      44      20
      45      20
      46      20
      47      20
      48      20
      49      20
      4a      20
      4b      21
      4c      21
      4d      21
      50      22
      51      22
      52      22
      53      22
      54      22
      55      22
      56      22
      57      23
      58      23
      59      23
      5a      23
      5b      23
      5c      23
      5d      23
      5e      23
      5f      23
      60      23
      61      24
      62      24
      63      24
      64      24
      65      24
      66      24
      67      24
      68      25
      69      25
      6a      25
      6b      25
      6c      25
      6d      25
      6e      25
      6f      25
      70      25
      71      25
      76      26
      77      26
      78      26
      79      26
      7a      26
      7b      26
      7c      26
      7d      26
      7e      26
      7f      27
      80      27
      81      27
      84      28
      85      28
      86      28
      87      28
      88      28
      89      28
      8a      28
      8b      29
      8c      29
      8d      29
      8e      29
      8f      29
      90      29
      91      29
      92      29
      93      29
      94      29
      95      30
      96      30
      97      30
      98      30
      99      30
      9a      30
      9b      30
      9c      31
      9d      31
      9e      31
      9f      31
      a0      31
      a1      31
      a2      31
      a3      31
      a4      31
      a5      31
      a6      32
      a7      32
      a8      32
      a9      32
      aa      32
      ab      32
      ac      32
      ad      32
      ae      32
      b3      33
      b4      33
      b5      33
      b6      33
      b7      33
      b8      33
      b9      34
      ba      34
      bb      34
      bc      34
      bd      34
      be      34
      c1      41
      c2      41
      c3      42
      c6      35
      c7      35
      cb      35
      cc      35
      cd      35
      ce      35
      cf      35
      d0      36
      d3      44
      d4      44
      d5      44
      d6      44
      d7      44
      d8      44
      d9      45
      da      45
      db      46
      de      48
      df      48
      e0      48
      e1      48
      e2      48
      e3      48
      e4      49
      e5      49
      e6      50
      e9      52
      ea      52
      eb      52
      ec      52
      ed      52
      ee      52
      ef      53
      f0      53
      f1      53
      f4      54
      f5      54
      f6      55
      f9      58
      fa      58
      fb      59
      fe      61
      ff      61
      100      61
      101      61
      102      61
      103      61
      104      62
      105      62
      106      63
      109      17
      10a      17
      10b      18
      10e      68
      10f      68
      110      68
      111      69
      112      69
      113      69
      114      69
      115      69
      116      70
      117      70
      118      70
      119      70
      11a      70
      11d      71
      11e      71
      11f      71
      120      71
      121      71
      122      71
      123      72
      124      72
      125      72
      126      72
      127      72
      128      72
      129      72
      12a      72
      12b      72
      12c      73
      12d      73
      12e      73
      12f      73
      130      73
      131      73
      132      74
      133      74
      134      74
      135      74
      136      74
      137      74
      138      74
      139      74
      13a      74
      13b      74
      13c      75
      13d      75
      13e      75
      13f      75
      140      75
      141      75
      142      76
      143      76
      144      76
      145      76
      146      76
      147      76
      148      76
      149      76
      14a      76
      14b      76
      14c      77
      14d      77
      14e      77
      14f      77
      150      77
      151      77
      152      77
      153      77
      154      77
      155      77
      156      77
      159      80
      15a      80
      15b      80
      15c      80
      15d      80
      160      81
      161      81
      162      81
      163      81
      164      81
      165      81
      166      82
      167      82
      168      82
      169      82
      16a      82
      16b      82
      16c      82
      16d      82
      16e      82
      16f      83
      170      83
      171      83
      172      83
      173      83
      174      83
      175      84
      176      84
      177      84
      178      84
      179      84
      17a      84
      17b      84
      17c      84
      17d      84
      17e      84
      17f      85
      180      85
      181      85
      182      85
      183      85
      184      85
      185      86
      186      86
      187      86
      188      86
      189      86
      18a      86
      18b      86
      18c      86
      18d      86
      18e      86
      192      87
      193      87
      196      87
      197      87
      198      87
      199      87
      19c      88
      19d      88
      19e      88
      19f      88
      1a0      88
      1a1      88
      1a4      92
      1a5      92
      1a6      92
      1a7      92
      1a8      92
      1a9      93
      1aa      93
      1ab      93
      1ac      93
      1ad      93
      1b0      94
      1b1      94
      1b2      94
      1b3      94
      1b4      94
      1b5      94
      1b6      95
      1b7      95
      1bb      95
      1c5      96
      1c6      96
      1c7      96
      1c8      96
      1c9      96
      1ca      96
      1cb      97
      1cc      97
      1d0      97
      1da      98
      1db      98
      1dc      98
      1dd      98
      1de      98
      1df      98
      1e0      99
      1e1      99
      1e4      99
      1e5      99
      1e6      99
      1e7      99
      1e8      99
      1e9      99
      1ea      99
      1ed      99
      1ee      99
      1ef      99
      1f0      99
      1f1      99
      1f2      99
      1f3      99
      1f4      99
      1f5      99
      1f8      104
   }

   method 'fromText ([Ljava/lang/String;)LRecordPatterns$Shape;' {
      0      109
      1      109
   }

   method 'fromTextP ([Ljava/lang/String;)LRecordPatterns$Point3;' {
      0      113
      1      113
   }

   method 'fromTextS ([Ljava/lang/String;)LRecordPatterns$S;' {
      0      117
      1      117
   }
}

Lines mapping:
19 <-> 7
20 <-> 69
21 <-> 24
22 <-> 36
23 <-> 45
24 <-> 49
25 <-> 53
26 <-> 59
27 <-> 62
28 <-> 72
31 <-> 70
33 <-> 82
34 <-> 78
37 <-> 95
38 <-> 89
41 <-> 93
43 <-> 94
44 <-> 100
46 <-> 105
49 <-> 110
53 <-> 114
57 <-> 118
